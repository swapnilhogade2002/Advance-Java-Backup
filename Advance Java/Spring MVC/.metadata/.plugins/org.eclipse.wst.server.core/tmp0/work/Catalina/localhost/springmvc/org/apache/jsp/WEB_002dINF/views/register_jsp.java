/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.92
 * Generated at: 2023-11-27 11:54:24 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class register_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=ISO-8859-1");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("<!DOCTYPE html>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<html lang=\"en\">\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"utf-8\">\r\n");
      out.write("<meta name=\"viewport\"\r\n");
      out.write("	content=\"width=device-width, initial-scale=1, shrink-to-fit=no\">\r\n");
      out.write("<meta http-equiv=\"Cache-Control\"\r\n");
      out.write("	content=\"no-store, no-cache, must-revalidate\">\r\n");
      out.write("<meta http-equiv=\"Pragma\" content=\"no-cache\">\r\n");
      out.write("<meta http-equiv=\"Expires\" content=\"0\">\r\n");
      out.write("<link rel=\"stylesheet\"\r\n");
      out.write("	href=\"https://cdn.jsdelivr.net/npm/bootstrap@4.0.0/dist/css/bootstrap.min.css\"\r\n");
      out.write("	integrity=\"sha384-Gn5384xqQ1aoWXA+058RXPxPg6fy4IWvTNh0E263XmFcJlSAwiGgFAW/dAiS6JXm\"\r\n");
      out.write("	crossorigin=\"anonymous\">\r\n");
      out.write("<link rel=\"stylesheet\"\r\n");
      out.write("	href=\"https://cdn.jsdelivr.net/npm/sweetalert2@10\">\r\n");
      out.write("<style>\r\n");
      out.write(".error {\r\n");
      out.write("	color: red;\r\n");
      out.write("}\r\n");
      out.write("</style>\r\n");
      out.write("<script>\r\n");
      out.write("        function validateForm() {\r\n");
      out.write("            var firstName = document.getElementById('firstName').value;\r\n");
      out.write("            var lastName = document.getElementById('lastName').value;\r\n");
      out.write("            var city = document.getElementById('city').value;\r\n");
      out.write("            var email = document.getElementById('exampleInputEmail1').value;\r\n");
      out.write("            var userName = document.getElementById('username').value;\r\n");
      out.write("            var password = document.getElementById('password').value;\r\n");
      out.write("\r\n");
      out.write("            var firstNameError = document.getElementById('firstNameError');\r\n");
      out.write("            var lastNameError = document.getElementById('lastNameError');\r\n");
      out.write("            var cityError = document.getElementById('cityError');\r\n");
      out.write("            var emailError = document.getElementById('emailError');\r\n");
      out.write("            var userNameError = document.getElementById('userNameError');\r\n");
      out.write("            var passwordError = document.getElementById('passwordError');\r\n");
      out.write("\r\n");
      out.write("            var isValid = true;\r\n");
      out.write("\r\n");
      out.write("            // First Name validation\r\n");
      out.write("            if (firstName.trim() === '') {\r\n");
      out.write("                firstNameError.innerHTML = 'First Name is required';\r\n");
      out.write("                isValid = false;\r\n");
      out.write("            } else if (firstName.length < 3 || firstName.length > 20) {\r\n");
      out.write("                firstNameError.innerHTML = 'First Name must be between 3 and 20 characters';\r\n");
      out.write("                isValid = false;\r\n");
      out.write("            } else {\r\n");
      out.write("                firstNameError.innerHTML = '';\r\n");
      out.write("            }\r\n");
      out.write("\r\n");
      out.write("            // Last Name validation\r\n");
      out.write("            if (lastName.trim() === '') {\r\n");
      out.write("                lastNameError.innerHTML = 'Last Name is required';\r\n");
      out.write("                isValid = false;\r\n");
      out.write("            } else if (lastName.length < 3 || lastName.length > 20) {\r\n");
      out.write("                lastNameError.innerHTML = 'Last Name must be between 3 and 20 characters';\r\n");
      out.write("                isValid = false;\r\n");
      out.write("            } else {\r\n");
      out.write("                lastNameError.innerHTML = '';\r\n");
      out.write("            }\r\n");
      out.write("\r\n");
      out.write("            // City validation\r\n");
      out.write("            if (city.trim() === '') {\r\n");
      out.write("                cityError.innerHTML = 'City is required';\r\n");
      out.write("                isValid = false;\r\n");
      out.write("            } else if (city.length < 3 || city.length > 20) {\r\n");
      out.write("                cityError.innerHTML = 'City must be between 3 and 20 characters';\r\n");
      out.write("                isValid = false;\r\n");
      out.write("            } else {\r\n");
      out.write("                cityError.innerHTML = '';\r\n");
      out.write("            }\r\n");
      out.write("\r\n");
      out.write("            // Email validation\r\n");
      out.write("            if (email.trim() === '') {\r\n");
      out.write("                emailError.innerHTML = 'Email is required';\r\n");
      out.write("                isValid = false;\r\n");
      out.write("            } else {\r\n");
      out.write("                var emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n");
      out.write("                if (!emailRegex.test(email)) {\r\n");
      out.write("                    emailError.innerHTML = 'Enter a valid email address';\r\n");
      out.write("                    isValid = false;\r\n");
      out.write("                } else {\r\n");
      out.write("                    emailError.innerHTML = '';\r\n");
      out.write("                }\r\n");
      out.write("            }\r\n");
      out.write("\r\n");
      out.write("            // User Name validation\r\n");
      out.write("            if (userName.trim() === '') {\r\n");
      out.write("                userNameError.innerHTML = 'User Name is required';\r\n");
      out.write("                isValid = false;\r\n");
      out.write("            } else if (userName.length < 3 || userName.length > 20) {\r\n");
      out.write("                userNameError.innerHTML = 'Username must be between 3 and 20 characters';\r\n");
      out.write("                isValid = false;\r\n");
      out.write("            } else {\r\n");
      out.write("                var usernameRegex = /^[a-zA-Z0-9_]+$/;\r\n");
      out.write("                if (!usernameRegex.test(userName)) {\r\n");
      out.write("                    userNameError.innerHTML = 'Username can only contain letters, numbers, and underscores';\r\n");
      out.write("                    isValid = false;\r\n");
      out.write("                } else {\r\n");
      out.write("                    userNameError.innerHTML = '';\r\n");
      out.write("                }\r\n");
      out.write("            }\r\n");
      out.write("\r\n");
      out.write("            // Password validation\r\n");
      out.write("            if (password.trim() === '') {\r\n");
      out.write("                passwordError.innerHTML = 'Password is required';\r\n");
      out.write("                isValid = false;\r\n");
      out.write("            } else {\r\n");
      out.write("                // Check for minimum length\r\n");
      out.write("                if (password.length < 8 || password.length > 20) {\r\n");
      out.write("                    passwordError.innerHTML = 'Password must be between 8 and 20 characters long';\r\n");
      out.write("                    isValid = false;\r\n");
      out.write("                } else {\r\n");
      out.write("                    // Check for at least one uppercase letter, one lowercase letter, one number, and one special character\r\n");
      out.write("                    var passwordRegex = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]+$/;\r\n");
      out.write("                    if (!passwordRegex.test(password)) {\r\n");
      out.write("                        passwordError.innerHTML = 'Password must contain at least one uppercase letter, one lowercase letter, one number, and one special character';\r\n");
      out.write("                        isValid = false;\r\n");
      out.write("                    } else {\r\n");
      out.write("                        passwordError.innerHTML = '';\r\n");
      out.write("                    }\r\n");
      out.write("                }\r\n");
      out.write("            }\r\n");
      out.write("\r\n");
      out.write("            if (isValid) {\r\n");
      out.write("                showSuccessMessage();\r\n");
      out.write("            }\r\n");
      out.write("\r\n");
      out.write("         // Prevent the default form submission\r\n");
      out.write("            return false;;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        function showSuccessMessage() {\r\n");
      out.write("            Swal.fire({\r\n");
      out.write("                icon: 'success',\r\n");
      out.write("                title: 'Registration Successful!',\r\n");
      out.write("                text: 'Thank you for registering.',\r\n");
      out.write("                confirmButtonText: 'OK'\r\n");
      out.write("            }).then((result) => {\r\n");
      out.write("                // Check if the user clicked \"OK\"\r\n");
      out.write("                if (result.isConfirmed) {\r\n");
      out.write("                    // Redirect to the login page\r\n");
      out.write("                    window.location.href = 'loginpage';\r\n");
      out.write("                }\r\n");
      out.write("            });\r\n");
      out.write("        }\r\n");
      out.write("    </script>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("	<div class=\"container mt-5\">\r\n");
      out.write("		<div class=\"container text-center\">\r\n");
      out.write("			<h4>Registration Form</h4>\r\n");
      out.write("		</div>\r\n");
      out.write("\r\n");
      out.write("		<form action=\"processform\" method=\"post\"\r\n");
      out.write("			onsubmit=\"return validateForm()\">\r\n");
      out.write("			<div class=\"form-group\">\r\n");
      out.write("				<label for=\"exampleInputEmail1\">Enter First Name</label> <input\r\n");
      out.write("					type=\"text\" class=\"form-control\" id=\"firstName\"\r\n");
      out.write("					aria-describedby=\"emailHelp\" placeholder=\"First Name\"\r\n");
      out.write("					name=\"firstName\">\r\n");
      out.write("				<div class=\"error\" id=\"firstNameError\"></div>\r\n");
      out.write("			</div>\r\n");
      out.write("			<div class=\"form-group\">\r\n");
      out.write("				<label for=\"exampleInputEmail1\">Enter Last Name</label> <input\r\n");
      out.write("					type=\"text\" class=\"form-control\" id=\"lastName\"\r\n");
      out.write("					aria-describedby=\"emailHelp\" placeholder=\"Last Name\"\r\n");
      out.write("					name=\"lastName\">\r\n");
      out.write("				<div class=\"error\" id=\"lastNameError\"></div>\r\n");
      out.write("			</div>\r\n");
      out.write("			<div class=\"form-group\">\r\n");
      out.write("				<label for=\"city\">Select City</label> <select class=\"form-control\"\r\n");
      out.write("					id=\"city\" name=\"city\">\r\n");
      out.write("					<option value=\"\">Select City</option>\r\n");
      out.write("					<option value=\"Nashik\">Nashik</option>\r\n");
      out.write("					<option value=\"Mumbai\">Mumbai</option>\r\n");
      out.write("					<option value=\"Pune\">Pune</option>\r\n");
      out.write("				</select>\r\n");
      out.write("				<div class=\"error\" id=\"cityError\"></div>\r\n");
      out.write("			</div>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("			<div class=\"form-group\">\r\n");
      out.write("				<label for=\"exampleInputEmail1\">Email address</label> <input\r\n");
      out.write("					type=\"email\" class=\"form-control\" id=\"exampleInputEmail1\"\r\n");
      out.write("					aria-describedby=\"emailHelp\" placeholder=\"Enter email\" name=\"email\">\r\n");
      out.write("				<div class=\"error\" id=\"emailError\"></div>\r\n");
      out.write("			</div>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("			<div class=\"form-group\">\r\n");
      out.write("				<label for=\"userPassword\">Password</label> <input type=\"password\"\r\n");
      out.write("					class=\"form-control\" id=\"password\" aria-describedby=\"emailHelp\"\r\n");
      out.write("					placeholder=\"Enter password\" name=\"password\">\r\n");
      out.write("				<div class=\"error\" id=\"passwordError\"></div>\r\n");
      out.write("			</div>\r\n");
      out.write("\r\n");
      out.write("			<div class=\"container text-center\">\r\n");
      out.write("				<button type=\"submit\" class=\"btn btn-success\">Register</button>\r\n");
      out.write("			</div>\r\n");
      out.write("		</form>\r\n");
      out.write("	</div>\r\n");
      out.write("\r\n");
      out.write("	<script src=\"https://cdn.jsdelivr.net/npm/sweetalert2@10\"></script>\r\n");
      out.write("	<script src=\"https://code.jquery.com/jquery-3.2.1.slim.min.js\"\r\n");
      out.write("		integrity=\"sha384-KJ3o2DKtIkvYIK3UENzmM7KCkRr/rE9/Qpg6aAZGJwFDMVNA/GpGFF93hXpG5KkN\"\r\n");
      out.write("		crossorigin=\"anonymous\"></script>\r\n");
      out.write("	<script\r\n");
      out.write("		src=\"https://cdn.jsdelivr.net/npm/popper.js@1.12.9/dist/umd/popper.min.js\"\r\n");
      out.write("		integrity=\"sha384-ApNbgh9B+Y1QKtv3Rn7W3mgPxhU9K/ScQsAP7hUibX39j7fakFPskvXusvfa0b4Q\"\r\n");
      out.write("		crossorigin=\"anonymous\"></script>\r\n");
      out.write("	<script\r\n");
      out.write("		src=\"https://cdn.jsdelivr.net/npm/bootstrap@4.0.0/dist/js/bootstrap.min.js\"\r\n");
      out.write("		integrity=\"sha384-JZR6Spejh4U02d8jOt6vLEHfe/JQGiRRSQQxSfFWpi1MquVdAyjUar5+76PVCmYl\"\r\n");
      out.write("		crossorigin=\"anonymous\"></script>\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
